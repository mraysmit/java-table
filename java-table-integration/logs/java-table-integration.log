2025-05-16 00:10:01 [main] INFO  d.m.j.i.CSVToSQLiteDemoExecutionTest - Starting CSVToSQLiteDemo execution test
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initializing CSVToSQLiteDemo
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized MappingConfigurationManager
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized CSVProcessor
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized DbConnectionManager
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized SQLiteProcessor
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized SQLiteQueryManager
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSVToSQLiteDemo initialization complete
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Starting CSV to SQLite with mapping demonstration
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Demo process starting with the following parameters:
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - CSV file name: demo_data.csv
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - CSV mapping file: csv_sqlite_mapping.json
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - SQLite mapping file: sqlite_mapping.json
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - Default SQLite table name: person_data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generating demo CSV content
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated CSV content with header and 3 data rows
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated CSV content with 133 characters
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Checking if demo CSV file exists: demo_data.csv
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Using existing CSV file: demo_data.csv
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Existing file size: 133 bytes
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Existing file last modified: Thu May 15 21:40:13 CST 2025
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Demo CSV file created or already exists: demo_data.csv
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created empty TableCore with name 'CSVToSQLiteDemo-InputTable' and initial capacity
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Resolved CSV file location: demo_data.csv
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo CSV column mappings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: id -> personId (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: name -> fullName (type: string, default: Unknown)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: email -> emailAddress (type: string, default: no-email@example.com)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: age -> personAge (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: department -> department (type: string, default: General)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created 5 CSV column mappings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created CSV column mappings with 5 mappings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 0: id -> personId (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 1: name -> fullName (type: string, default: Unknown)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 2: email -> emailAddress (type: string, default: no-email@example.com)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 3: age -> personAge (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 4: department -> department (type: string, default: General)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo CSV options
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Setting CSV option: hasHeaderRow = true
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Setting CSV option: allowEmptyValues = true
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created CSV options with 2 settings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created CSV options with 2 options
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV option: hasHeaderRow = true
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV option: allowEmptyValues = true
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating CSV mapping configuration with file location: demo_data.csv
2025-05-16 00:10:01 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Loaded mapping configuration from file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\csv_sqlite_mapping.json
2025-05-16 00:10:01 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Using existing CSV mapping configuration from file
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping configuration created successfully
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Reading data from CSV file: demo_data.csv using mapping configuration
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.csv.CSVProcessor - Creating FileConnection for CSV file: demo_data.csv
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.csv.CSVProcessor - Successfully connected to CSV file
2025-05-16 00:10:01 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in headers
2025-05-16 00:10:01 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in CSV file or index out of bounds. Using default value if available.
2025-05-16 00:10:01 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in headers
2025-05-16 00:10:01 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in CSV file or index out of bounds. Using default value if available.
2025-05-16 00:10:01 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in headers
2025-05-16 00:10:01 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in CSV file or index out of bounds. Using default value if available.
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.csv.CSVProcessor - Successfully read data from CSV file with 3 rows and 5 columns
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.csv.CSVProcessor - Disconnected from CSV file
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Read operation completed, processed 3 rows
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from CSV file: demo_data.csv
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 3 rows
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table column count: 5
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating database connection for SQLite
2025-05-16 00:10:01 [main] DEBUG d.m.j.i.utils.DatabaseProperties - Successfully loaded properties from db.properties
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Using database properties: connection string=jdbc:sqlite:demo_sqlite.db, username=
2025-05-16 00:10:01 [main] INFO  d.m.j.i.db.DbConnectionManager - Creating SQLite connection: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:10:01 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite connection created: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Connecting to SQLite database
2025-05-16 00:10:01 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Successfully connected to SQLite database: true
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Connection details: isConnected=true, connectionString=jdbc:sqlite:demo_sqlite.db
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo SQLite column mappings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personId -> person_id (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: fullName -> full_name (type: string, default: Unknown)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: emailAddress -> email_address (type: string, default: no-email@example.com)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personAge -> age (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: department -> department (type: string, default: General)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created 5 SQLite column mappings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite column mappings with 5 mappings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 0: personId -> person_id (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 1: fullName -> full_name (type: string, default: Unknown)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 2: emailAddress -> email_address (type: string, default: no-email@example.com)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 3: personAge -> age (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 4: department -> department (type: string, default: General)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo SQLite options
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Setting SQLite option: createTable = true
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite options with 1 settings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite options with 1 options
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite option: createTable = true
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating SQLite mapping configuration for table: person_data
2025-05-16 00:10:01 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Loaded mapping configuration from file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\sqlite_mapping.json
2025-05-16 00:10:01 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Using existing SQLite mapping configuration from file
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping configuration created successfully
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Writing data to SQLite database: 3 rows
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.db.SQLiteProcessor - Successfully connected to SQLite database
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.db.SQLiteProcessor - Successfully wrote 3 rows to SQLite database table: person_data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Write operation completed, wrote 3 rows
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully wrote data to SQLite database
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Reading data from SQLite database table: person_data
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Reading data from SQLite database table: person_data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Database connection details: isConnected=true, connectionString=jdbc:sqlite:demo_sqlite.db
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Executing SQL query: SELECT * FROM person_data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Using SQLiteQueryManager to execute query
2025-05-16 00:10:01 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT * FROM person_data
2025-05-16 00:10:01 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 27 rows
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query execution completed
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result: 27 rows, 5 columns
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: person_id=int, full_name=string, email_address=string, age=int, department=string
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read 27 rows from SQLite database table: person_data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging query result data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Starting to log table data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table structure: 27 rows and 5 columns
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 27 rows and 5 columns
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column names: Columns: person_id, full_name, email_address, age, department
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Columns: person_id, full_name, email_address, age, department
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: person_id=int, full_name=string, email_address=string, age=int, department=string
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging first 10 rows of data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Not showing 17 additional rows
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - ... and 17 more rows
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Finished logging table data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result logging complete
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result table has 27 rows and 5 columns
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from SQLite database
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generating SQL SELECT statement from mapping configuration
2025-05-16 00:10:01 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement: SELECT person_id, full_name, email_address, age, department FROM person_data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated SQL query: SELECT person_id, full_name, email_address, age, department FROM person_data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Executing generated SQL query
2025-05-16 00:10:01 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT person_id, full_name, email_address, age, department FROM person_data
2025-05-16 00:10:01 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 27 rows
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query execution completed
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result table has 27 rows and 5 columns
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from SQLite database using generated SQL query
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging table data for demonstration purposes
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Starting to log table data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table structure: 27 rows and 5 columns
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 27 rows and 5 columns
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column names: Columns: person_id, full_name, email_address, age, department
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Columns: person_id, full_name, email_address, age, department
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: person_id=int, full_name=string, email_address=string, age=int, department=string
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging first 10 rows of data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Not showing 17 additional rows
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - ... and 17 more rows
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Finished logging table data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table data logging complete
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Demonstrating SQLite mapping configuration with column aliases
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo SQLite column mappings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personId -> person_id (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: fullName -> full_name (type: string, default: Unknown)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: emailAddress -> email_address (type: string, default: no-email@example.com)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personAge -> age (type: int, default: 0)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: department -> department (type: string, default: General)
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created 5 SQLite column mappings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite column mappings for alias demonstration with 5 mappings
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating SQLite mapping configuration with aliases for table: person_data
2025-05-16 00:10:01 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Loaded mapping configuration from file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\sqlite_alias_mapping.json
2025-05-16 00:10:01 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Using existing SQLite mapping configuration from file
2025-05-16 00:10:01 [main] DEBUG d.m.j.i.c.MappingConfigurationManager - Created SQLite mapping configuration with aliases
2025-05-16 00:10:01 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Saved mapping configuration to file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\sqlite_alias_mapping.json
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping configuration with aliases created successfully
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generating SQL SELECT statement with aliases from mapping configuration
2025-05-16 00:10:01 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement with aliases: SELECT person_id AS personId, full_name AS fullName, email_address AS emailAddress, age AS personAge, department AS department FROM person_data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated SQL query with aliases: SELECT person_id AS personId, full_name AS fullName, email_address AS emailAddress, age AS personAge, department AS department FROM person_data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Executing generated SQL query with aliases
2025-05-16 00:10:01 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT person_id AS personId, full_name AS fullName, email_address AS emailAddress, age AS personAge, department AS department FROM person_data
2025-05-16 00:10:01 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 27 rows
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query execution completed
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result table has 27 rows and 5 columns
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from SQLite database using generated SQL query with aliases
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging table data for alias demonstration
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Starting to log table data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table structure: 27 rows and 5 columns
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 27 rows and 5 columns
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column names: Columns: personId, fullName, emailAddress, personAge, department
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Columns: personId, fullName, emailAddress, personAge, department
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: personId=int, fullName=string, emailAddress=string, personAge=int, department=string
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging first 10 rows of data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 0: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 0: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 1: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 1: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 2: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 2: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 3: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 3: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 4: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 4: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 5: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 5: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 6: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 6: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 7: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 7: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 8: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 8: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 9: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 9: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Not showing 17 additional rows
2025-05-16 00:10:01 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - ... and 17 more rows
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Finished logging table data
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table data logging complete for alias demonstration
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Ensuring database connection is closed
2025-05-16 00:10:01 [main] DEBUG d.m.j.i.db.DbConnectionManager - Disconnected from database: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:10:01 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Database connection cleanup complete
2025-05-16 00:10:01 [main] INFO  d.m.j.i.CSVToSQLiteDemoExecutionTest - Completed CSVToSQLiteDemo execution test
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:12 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with default properties
2025-05-16 00:10:12 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:test_query.db
2025-05-16 00:10:12 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:test_query.db
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT * FROM test_query_table ORDER BY id
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 3 rows
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified query results
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:12 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:12 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing generateSelectStatement with aliases configuration
2025-05-16 00:10:12 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement with aliases: SELECT id AS source_id, name AS source_name, age AS source_age FROM test_query_table
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:12 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:12 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with custom properties
2025-05-16 00:10:12 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:test_query.db
2025-05-16 00:10:12 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:test_query.db
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT * FROM test_query_table WHERE age > 25 ORDER BY age
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 2 rows
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified query results with custom properties
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:12 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:12 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with null connection
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified that null connection throws exception
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:13 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with invalid query
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:test_query.db
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:test_query.db
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified that invalid query throws exception
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.DbConnectionManager - Disconnected from database: jdbc:sqlite:test_query.db
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:13 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with empty query
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified that empty query throws exception
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:13 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with connection
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:test_query.db
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:test_query.db
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT * FROM test_query_table WHERE name LIKE 'B%'
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 1 rows
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified query results with connection
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.DbConnectionManager - Disconnected from database: jdbc:sqlite:test_query.db
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:13 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing generateSelectStatement with standard configuration
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement: SELECT id, name, age FROM test_query_table
2025-05-16 00:10:13 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified that generateSelectStatement generates the correct SQL
2025-05-16 00:10:13 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:13 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:41 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with default properties
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT * FROM test_query_table ORDER BY id
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 3 rows
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified query results
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:42 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing generateSelectStatement with aliases configuration
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement with aliases: SELECT id AS source_id, name AS source_name, age AS source_age FROM test_query_table
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified that generateSelectStatement generates the correct SQL with aliases
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:42 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with custom properties
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT * FROM test_query_table WHERE age > 25 ORDER BY age
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 2 rows
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified query results with custom properties
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:42 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with null connection
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified that null connection throws exception
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:42 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with invalid query
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified that invalid query throws exception
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Disconnected from database: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:42 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with empty query
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified that empty query throws exception
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:42 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing executeQuery with connection
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT * FROM test_query_table WHERE name LIKE 'B%'
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 1 rows
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified query results with connection
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.DbConnectionManager - Disconnected from database: jdbc:sqlite:test_query.db
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:42 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Setting up test environment
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Created test database and table with sample data
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Testing generateSelectStatement with standard configuration
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement: SELECT id, name, age FROM test_query_table
2025-05-16 00:10:42 [main] DEBUG d.m.j.i.db.SQLiteQueryManagerTest - Successfully verified that generateSelectStatement generates the correct SQL
2025-05-16 00:10:42 [main] INFO  d.m.j.i.db.SQLiteQueryManagerTest - Tearing down test environment
2025-05-16 00:10:42 [main] WARN  d.m.j.i.db.SQLiteQueryManagerTest - Could not delete test database file: test_query.db: The process cannot access the file because it is being used by another process
2025-05-16 00:11:15 [main] INFO  d.m.j.i.CSVToSQLiteDemoExecutionTest - Starting CSVToSQLiteDemo execution test
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initializing CSVToSQLiteDemo
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized MappingConfigurationManager
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized CSVProcessor
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized DbConnectionManager
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized SQLiteProcessor
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized SQLiteQueryManager
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSVToSQLiteDemo initialization complete
2025-05-16 00:11:15 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Starting CSV to SQLite with mapping demonstration
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Demo process starting with the following parameters:
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - CSV file name: demo_data.csv
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - CSV mapping file: csv_sqlite_mapping.json
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - SQLite mapping file: sqlite_mapping.json
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - Default SQLite table name: person_data
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generating demo CSV content
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated CSV content with header and 3 data rows
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated CSV content with 133 characters
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Checking if demo CSV file exists: demo_data.csv
2025-05-16 00:11:15 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Using existing CSV file: demo_data.csv
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Existing file size: 133 bytes
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Existing file last modified: Thu May 15 21:40:13 CST 2025
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Demo CSV file created or already exists: demo_data.csv
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created empty TableCore with name 'CSVToSQLiteDemo-InputTable' and initial capacity
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Resolved CSV file location: demo_data.csv
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo CSV column mappings
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: id -> personId (type: int, default: 0)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: name -> fullName (type: string, default: Unknown)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: email -> emailAddress (type: string, default: no-email@example.com)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: age -> personAge (type: int, default: 0)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: department -> department (type: string, default: General)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created 5 CSV column mappings
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created CSV column mappings with 5 mappings
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 0: id -> personId (type: int, default: 0)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 1: name -> fullName (type: string, default: Unknown)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 2: email -> emailAddress (type: string, default: no-email@example.com)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 3: age -> personAge (type: int, default: 0)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 4: department -> department (type: string, default: General)
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo CSV options
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Setting CSV option: hasHeaderRow = true
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Setting CSV option: allowEmptyValues = true
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created CSV options with 2 settings
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created CSV options with 2 options
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV option: hasHeaderRow = true
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV option: allowEmptyValues = true
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating CSV mapping configuration with file location: demo_data.csv
2025-05-16 00:11:15 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Loaded mapping configuration from file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\csv_sqlite_mapping.json
2025-05-16 00:11:15 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Using existing CSV mapping configuration from file
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping configuration created successfully
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Reading data from CSV file: demo_data.csv using mapping configuration
2025-05-16 00:11:15 [main] INFO  d.m.j.integration.csv.CSVProcessor - Creating FileConnection for CSV file: demo_data.csv
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.csv.CSVProcessor - Successfully connected to CSV file
2025-05-16 00:11:15 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in headers
2025-05-16 00:11:15 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in CSV file or index out of bounds. Using default value if available.
2025-05-16 00:11:15 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in headers
2025-05-16 00:11:15 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in CSV file or index out of bounds. Using default value if available.
2025-05-16 00:11:15 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in headers
2025-05-16 00:11:15 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in CSV file or index out of bounds. Using default value if available.
2025-05-16 00:11:15 [main] INFO  d.m.j.integration.csv.CSVProcessor - Successfully read data from CSV file with 3 rows and 5 columns
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.csv.CSVProcessor - Disconnected from CSV file
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Read operation completed, processed 3 rows
2025-05-16 00:11:15 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from CSV file: demo_data.csv
2025-05-16 00:11:15 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 3 rows
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table column count: 5
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating database connection for SQLite
2025-05-16 00:11:15 [main] DEBUG d.m.j.i.utils.DatabaseProperties - Successfully loaded properties from db.properties
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Using database properties: connection string=jdbc:sqlite:demo_sqlite.db, username=
2025-05-16 00:11:15 [main] INFO  d.m.j.i.db.DbConnectionManager - Creating SQLite connection: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:11:15 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite connection created: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:11:15 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Connecting to SQLite database
2025-05-16 00:11:16 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Successfully connected to SQLite database: true
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Connection details: isConnected=true, connectionString=jdbc:sqlite:demo_sqlite.db
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo SQLite column mappings
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personId -> person_id (type: int, default: 0)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: fullName -> full_name (type: string, default: Unknown)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: emailAddress -> email_address (type: string, default: no-email@example.com)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personAge -> age (type: int, default: 0)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: department -> department (type: string, default: General)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created 5 SQLite column mappings
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite column mappings with 5 mappings
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 0: personId -> person_id (type: int, default: 0)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 1: fullName -> full_name (type: string, default: Unknown)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 2: emailAddress -> email_address (type: string, default: no-email@example.com)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 3: personAge -> age (type: int, default: 0)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 4: department -> department (type: string, default: General)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo SQLite options
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Setting SQLite option: createTable = true
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite options with 1 settings
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite options with 1 options
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite option: createTable = true
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating SQLite mapping configuration for table: person_data
2025-05-16 00:11:16 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Loaded mapping configuration from file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\sqlite_mapping.json
2025-05-16 00:11:16 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Using existing SQLite mapping configuration from file
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping configuration created successfully
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Writing data to SQLite database: 3 rows
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.db.SQLiteProcessor - Successfully connected to SQLite database
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.db.SQLiteProcessor - Successfully wrote 3 rows to SQLite database table: person_data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Write operation completed, wrote 3 rows
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully wrote data to SQLite database
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Reading data from SQLite database table: person_data
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Reading data from SQLite database table: person_data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Database connection details: isConnected=true, connectionString=jdbc:sqlite:demo_sqlite.db
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Executing SQL query: SELECT * FROM person_data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Using SQLiteQueryManager to execute query
2025-05-16 00:11:16 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT * FROM person_data
2025-05-16 00:11:16 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 30 rows
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query execution completed
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result: 30 rows, 5 columns
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: person_id=int, full_name=string, email_address=string, age=int, department=string
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read 30 rows from SQLite database table: person_data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging query result data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Starting to log table data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table structure: 30 rows and 5 columns
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 30 rows and 5 columns
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column names: Columns: person_id, full_name, email_address, age, department
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Columns: person_id, full_name, email_address, age, department
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: person_id=int, full_name=string, email_address=string, age=int, department=string
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging first 10 rows of data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Not showing 20 additional rows
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - ... and 20 more rows
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Finished logging table data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result logging complete
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result table has 30 rows and 5 columns
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from SQLite database
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generating SQL SELECT statement from mapping configuration
2025-05-16 00:11:16 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement: SELECT person_id, full_name, email_address, age, department FROM person_data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated SQL query: SELECT person_id, full_name, email_address, age, department FROM person_data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Executing generated SQL query
2025-05-16 00:11:16 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT person_id, full_name, email_address, age, department FROM person_data
2025-05-16 00:11:16 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 30 rows
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query execution completed
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result table has 30 rows and 5 columns
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from SQLite database using generated SQL query
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging table data for demonstration purposes
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Starting to log table data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table structure: 30 rows and 5 columns
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 30 rows and 5 columns
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column names: Columns: person_id, full_name, email_address, age, department
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Columns: person_id, full_name, email_address, age, department
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: person_id=int, full_name=string, email_address=string, age=int, department=string
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging first 10 rows of data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Not showing 20 additional rows
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - ... and 20 more rows
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Finished logging table data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table data logging complete
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Demonstrating SQLite mapping configuration with column aliases
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo SQLite column mappings
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personId -> person_id (type: int, default: 0)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: fullName -> full_name (type: string, default: Unknown)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: emailAddress -> email_address (type: string, default: no-email@example.com)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personAge -> age (type: int, default: 0)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: department -> department (type: string, default: General)
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created 5 SQLite column mappings
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite column mappings for alias demonstration with 5 mappings
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating SQLite mapping configuration with aliases for table: person_data
2025-05-16 00:11:16 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Loaded mapping configuration from file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\sqlite_alias_mapping.json
2025-05-16 00:11:16 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Using existing SQLite mapping configuration from file
2025-05-16 00:11:16 [main] DEBUG d.m.j.i.c.MappingConfigurationManager - Created SQLite mapping configuration with aliases
2025-05-16 00:11:16 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Saved mapping configuration to file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\sqlite_alias_mapping.json
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping configuration with aliases created successfully
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generating SQL SELECT statement with aliases from mapping configuration
2025-05-16 00:11:16 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement with aliases: SELECT person_id AS personId, full_name AS fullName, email_address AS emailAddress, age AS personAge, department AS department FROM person_data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated SQL query with aliases: SELECT person_id AS personId, full_name AS fullName, email_address AS emailAddress, age AS personAge, department AS department FROM person_data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Executing generated SQL query with aliases
2025-05-16 00:11:16 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT person_id AS personId, full_name AS fullName, email_address AS emailAddress, age AS personAge, department AS department FROM person_data
2025-05-16 00:11:16 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 30 rows
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query execution completed
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result table has 30 rows and 5 columns
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from SQLite database using generated SQL query with aliases
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging table data for alias demonstration
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Starting to log table data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table structure: 30 rows and 5 columns
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 30 rows and 5 columns
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column names: Columns: personId, fullName, emailAddress, personAge, department
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Columns: personId, fullName, emailAddress, personAge, department
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: personId=int, fullName=string, emailAddress=string, personAge=int, department=string
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging first 10 rows of data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 0: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 0: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 1: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 1: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 2: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 2: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 3: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 3: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 4: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 4: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 5: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 5: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 6: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 6: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 7: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 7: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 8: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 8: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 9: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 9: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Not showing 20 additional rows
2025-05-16 00:11:16 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - ... and 20 more rows
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Finished logging table data
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table data logging complete for alias demonstration
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Ensuring database connection is closed
2025-05-16 00:11:16 [main] DEBUG d.m.j.i.db.DbConnectionManager - Disconnected from database: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:11:16 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Database connection cleanup complete
2025-05-16 00:11:16 [main] INFO  d.m.j.i.CSVToSQLiteDemoExecutionTest - Completed CSVToSQLiteDemo execution test
2025-05-16 00:18:41 [main] INFO  d.m.j.i.CSVToSQLiteDemoExecutionTest - Starting CSVToSQLiteDemo execution test
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initializing CSVToSQLiteDemo
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized MappingConfigurationManager
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized CSVProcessor
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized DbConnectionManager
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized SQLiteProcessor
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Initialized SQLiteQueryManager
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSVToSQLiteDemo initialization complete
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Starting CSV to SQLite with mapping demonstration
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Demo process starting with the following parameters:
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - CSV file name: demo_data.csv
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - CSV mapping file: csv_sqlite_mapping.json
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - SQLite mapping file: sqlite_mapping.json
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - - Default SQLite table name: person_data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generating demo CSV content
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated CSV content with header and 3 data rows
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated CSV content with 133 characters
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Checking if demo CSV file exists: demo_data.csv
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Using existing CSV file: demo_data.csv
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Existing file size: 133 bytes
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Existing file last modified: Thu May 15 21:40:13 CST 2025
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Demo CSV file created or already exists: demo_data.csv
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created empty TableCore with name 'CSVToSQLiteDemo-InputTable' and initial capacity
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Resolved CSV file location: demo_data.csv
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo CSV column mappings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: id -> personId (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: name -> fullName (type: string, default: Unknown)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: email -> emailAddress (type: string, default: no-email@example.com)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: age -> personAge (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding CSV column mapping: department -> department (type: string, default: General)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created 5 CSV column mappings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created CSV column mappings with 5 mappings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 0: id -> personId (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 1: name -> fullName (type: string, default: Unknown)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 2: email -> emailAddress (type: string, default: no-email@example.com)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 3: age -> personAge (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping 4: department -> department (type: string, default: General)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo CSV options
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Setting CSV option: hasHeaderRow = true
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Setting CSV option: allowEmptyValues = true
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created CSV options with 2 settings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created CSV options with 2 options
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV option: hasHeaderRow = true
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV option: allowEmptyValues = true
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating CSV mapping configuration with file location: demo_data.csv
2025-05-16 00:18:41 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Loaded mapping configuration from file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\csv_sqlite_mapping.json
2025-05-16 00:18:41 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Using existing CSV mapping configuration from file
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - CSV mapping configuration created successfully
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Reading data from CSV file: demo_data.csv using mapping configuration
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.csv.CSVProcessor - Creating FileConnection for CSV file: demo_data.csv
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.csv.CSVProcessor - Successfully connected to CSV file
2025-05-16 00:18:41 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in headers
2025-05-16 00:18:41 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in CSV file or index out of bounds. Using default value if available.
2025-05-16 00:18:41 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in headers
2025-05-16 00:18:41 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in CSV file or index out of bounds. Using default value if available.
2025-05-16 00:18:41 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in headers
2025-05-16 00:18:41 [main] WARN  d.m.j.io.files.csv.CSVMappingReader - Column 'department' not found in CSV file or index out of bounds. Using default value if available.
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.csv.CSVProcessor - Successfully read data from CSV file with 3 rows and 5 columns
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.csv.CSVProcessor - Disconnected from CSV file
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Read operation completed, processed 3 rows
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from CSV file: demo_data.csv
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 3 rows
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table column count: 5
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating database connection for SQLite
2025-05-16 00:18:41 [main] DEBUG d.m.j.i.utils.DatabaseProperties - Successfully loaded properties from db.properties
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Using database properties: connection string=jdbc:sqlite:demo_sqlite.db, username=
2025-05-16 00:18:41 [main] INFO  d.m.j.i.db.DbConnectionManager - Creating SQLite connection: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:18:41 [main] DEBUG d.m.j.i.db.DbConnectionManager - Creating database connection: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite connection created: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Connecting to SQLite database
2025-05-16 00:18:41 [main] DEBUG d.m.j.i.db.DbConnectionManager - Successfully connected to database: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Successfully connected to SQLite database: true
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Connection details: isConnected=true, connectionString=jdbc:sqlite:demo_sqlite.db
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo SQLite column mappings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personId -> person_id (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: fullName -> full_name (type: string, default: Unknown)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: emailAddress -> email_address (type: string, default: no-email@example.com)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personAge -> age (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: department -> department (type: string, default: General)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created 5 SQLite column mappings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite column mappings with 5 mappings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 0: personId -> person_id (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 1: fullName -> full_name (type: string, default: Unknown)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 2: emailAddress -> email_address (type: string, default: no-email@example.com)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 3: personAge -> age (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping 4: department -> department (type: string, default: General)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo SQLite options
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Setting SQLite option: createTable = true
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite options with 1 settings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite options with 1 options
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite option: createTable = true
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating SQLite mapping configuration for table: person_data
2025-05-16 00:18:41 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Loaded mapping configuration from file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\sqlite_mapping.json
2025-05-16 00:18:41 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Using existing SQLite mapping configuration from file
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping configuration created successfully
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Writing data to SQLite database: 3 rows
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.db.SQLiteProcessor - Successfully connected to SQLite database
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.db.SQLiteProcessor - Successfully wrote 3 rows to SQLite database table: person_data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Write operation completed, wrote 3 rows
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully wrote data to SQLite database
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Reading data from SQLite database table: person_data
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Reading data from SQLite database table: person_data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Database connection details: isConnected=true, connectionString=jdbc:sqlite:demo_sqlite.db
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Executing SQL query: SELECT * FROM person_data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Using SQLiteQueryManager to execute query
2025-05-16 00:18:41 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT * FROM person_data
2025-05-16 00:18:41 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 33 rows
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query execution completed
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result: 33 rows, 5 columns
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: person_id=int, full_name=string, email_address=string, age=int, department=string
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read 33 rows from SQLite database table: person_data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging query result data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Starting to log table data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table structure: 33 rows and 5 columns
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 33 rows and 5 columns
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column names: Columns: person_id, full_name, email_address, age, department
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Columns: person_id, full_name, email_address, age, department
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: person_id=int, full_name=string, email_address=string, age=int, department=string
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging first 10 rows of data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Not showing 23 additional rows
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - ... and 23 more rows
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Finished logging table data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result logging complete
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result table has 33 rows and 5 columns
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from SQLite database
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generating SQL SELECT statement from mapping configuration
2025-05-16 00:18:41 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement: SELECT person_id, full_name, email_address, age, department FROM person_data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated SQL query: SELECT person_id, full_name, email_address, age, department FROM person_data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Executing generated SQL query
2025-05-16 00:18:41 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT person_id, full_name, email_address, age, department FROM person_data
2025-05-16 00:18:41 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 33 rows
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query execution completed
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result table has 33 rows and 5 columns
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from SQLite database using generated SQL query
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging table data for demonstration purposes
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Starting to log table data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table structure: 33 rows and 5 columns
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 33 rows and 5 columns
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column names: Columns: person_id, full_name, email_address, age, department
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Columns: person_id, full_name, email_address, age, department
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: person_id=int, full_name=string, email_address=string, age=int, department=string
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging first 10 rows of data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 0: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 1: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 2: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 3: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 4: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 5: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 6: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 7: person_id=2, full_name=Jane Smith, email_address=jane.smith@example.com, age=25, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 8: person_id=3, full_name=Bob Johnson, email_address=bob.johnson@example.com, age=40, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 9: person_id=1, full_name=John Doe, email_address=john.doe@example.com, age=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Not showing 23 additional rows
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - ... and 23 more rows
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Finished logging table data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table data logging complete
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Demonstrating SQLite mapping configuration with column aliases
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating demo SQLite column mappings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personId -> person_id (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: fullName -> full_name (type: string, default: Unknown)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: emailAddress -> email_address (type: string, default: no-email@example.com)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: personAge -> age (type: int, default: 0)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Adding SQLite column mapping: department -> department (type: string, default: General)
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created 5 SQLite column mappings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Created SQLite column mappings for alias demonstration with 5 mappings
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Creating SQLite mapping configuration with aliases for table: person_data
2025-05-16 00:18:41 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Loaded mapping configuration from file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\sqlite_alias_mapping.json
2025-05-16 00:18:41 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Using existing SQLite mapping configuration from file
2025-05-16 00:18:41 [main] DEBUG d.m.j.i.c.MappingConfigurationManager - Created SQLite mapping configuration with aliases
2025-05-16 00:18:41 [main] INFO  d.m.j.i.c.MappingConfigurationManager - Saved mapping configuration to file: C:\Users\mraysmit\dev\idea-projects\java-table\java-table-integration\target\test-classes\mappings\sqlite_alias_mapping.json
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - SQLite mapping configuration with aliases created successfully
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generating SQL SELECT statement with aliases from mapping configuration
2025-05-16 00:18:41 [main] DEBUG d.m.j.i.db.SQLiteQueryManager - Generated SQL SELECT statement with aliases: SELECT person_id AS personId, full_name AS fullName, email_address AS emailAddress, age AS personAge, department AS department FROM person_data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Generated SQL query with aliases: SELECT person_id AS personId, full_name AS fullName, email_address AS emailAddress, age AS personAge, department AS department FROM person_data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Executing generated SQL query with aliases
2025-05-16 00:18:41 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Successfully executed query: SELECT person_id AS personId, full_name AS fullName, email_address AS emailAddress, age AS personAge, department AS department FROM person_data
2025-05-16 00:18:41 [main] INFO  d.m.j.i.db.SQLiteQueryManager - Query returned 33 rows
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query execution completed
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Query result table has 33 rows and 5 columns
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Successfully read data from SQLite database using generated SQL query with aliases
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging table data for alias demonstration
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Starting to log table data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table structure: 33 rows and 5 columns
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Table contains 33 rows and 5 columns
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column names: Columns: personId, fullName, emailAddress, personAge, department
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Columns: personId, fullName, emailAddress, personAge, department
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Column types: personId=int, fullName=string, emailAddress=string, personAge=int, department=string
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Logging first 10 rows of data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 0: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 0: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 1: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 1: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 2: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 2: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 3: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 3: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 4: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 4: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 5: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 5: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 6: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 6: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 7: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 7: personId=2, fullName=Jane Smith, emailAddress=jane.smith@example.com, personAge=25, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 8: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 8: personId=3, fullName=Bob Johnson, emailAddress=bob.johnson@example.com, personAge=40, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Row data: Row 9: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - Row 9: personId=1, fullName=John Doe, emailAddress=john.doe@example.com, personAge=30, department=General
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Not showing 23 additional rows
2025-05-16 00:18:41 [main] INFO  d.m.j.integration.CSVToSQLiteDemo - ... and 23 more rows
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Finished logging table data
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Table data logging complete for alias demonstration
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Ensuring database connection is closed
2025-05-16 00:18:41 [main] DEBUG d.m.j.i.db.DbConnectionManager - Disconnected from database: jdbc:sqlite:demo_sqlite.db
2025-05-16 00:18:41 [main] DEBUG d.m.j.integration.CSVToSQLiteDemo - Database connection cleanup complete
2025-05-16 00:18:41 [main] INFO  d.m.j.i.CSVToSQLiteDemoExecutionTest - Completed CSVToSQLiteDemo execution test
